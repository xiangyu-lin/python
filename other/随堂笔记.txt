控制语言：胶水语言

框架 web，Django

字节码：bytecode

面向过程：
	以指令为中心，由指令处理数据
	如何组织代码解决问题

面向对象
	以数据为中心，所有的处理代码围绕数据展开
	如何设计数据结构组织数据，并提供对此类数据所允许处理操作

简单方法：	#如果想用新版本python
	1.编译安装新版本至某特定路径
	2.pyenv

数据类型：转化
	隐式
	显式

字典：kv集合(键值对)
	{'a':31,'b':78}

	dir(),id(),type(),str(),help(),len(),
	callable()

	python过程式编程：
			基本数据类型
			对象引用
			组合数据类型
			逻辑操作符
			控制流语句
			算术操作符
			输入/输出
			函数的创建与调用

			class 自定义类型
			type

			instance：

			类：实例化成对象
				CA：
					IA：
					IB：

			两个对象比较
					1、值比较：对象中的数据是否相同 #==
					2、身份比较：两个变量名引用的是否为同一对象 # a is b
					3、类型比较：两个对象的类型是否相同 #type(a) is type(b)

			核心数据类型
				数字：int,long,float,complex,bool # 4复数 5布尔型
				字符：str,unicode
				列表: list
				字典：dict
				元组：tuple
				文件：file
			  其他类型：集合(set),frozeset,类类型，None

			其他文件类工具：pipes,fifos,sockets

			类型转换：
				str(),repr()或fotmat():将非字符型数据转换成字符
						atrans = str(a)
						atrans = repr(a)
				int():转为整数
				float():转为浮点数
				list(s):字串s转换成列表  #列表转字串很少用
				tuple(s):将字串s转换成元组
				sets(s):将字串s抓换成集合
				frozenset(s):将字符串s转换为不可变集合
				dict(d):创建字典，其d必须是(key,value)的元组序列

				chr(x): 将整数转换为字符
				ord(x):将字符转换成整数值
				hex(x)：将整数转换成16进制字串
				bin(x):
				oct(x):

		数字类型：

				python的数字字面量：布尔型，整数，浮点数，复数
						布尔型：true 1    false 0

		序列类型
				字符类型：
					字符串的字面量：把文本放入单、双、三引号中  #三引号可以跨行 包括换行符  ''' or """

				如果要使用Unicode编码，则在字串前使用u标识 str1 = u"hello world"(python2要加u 3不用)

				文档字串：模块、类或函数的第一条语句是一个字符的话，该字符串就成为文档字串，可以使用__doc__引用；

				运算符
					索引运算:[i]
					切片运算:[i:j]
					扩展运算:[i:j:stride]
									sum













注释
 # ：可以从一行中任何地方开始

 续行
 \ :
 ''' : 闭合操作符，单一语句跨多行

代码组
	缩进相同的一句语句构成一个代码块
	首行以关键字开始，如if，while等，以冒号结束
	Python 使用缩进来分隔代码组，同一代码组的代码行必须严格左对齐，否则会造成语法错误

同一行放置多个语句
	; 以分号分隔

模块
	每一个Python脚本文件都可以被当成是一个模块
	模块里的代码可以是一段直接执行的脚本，也可以是一些类型库函数的代码从而可由别的模块导入

标识符
python标识符
	第一个字符只能使用数字或下划线
	..

注释
	既不能缺少注释，也不要过度注释

文档
	__doc__ 动态获得文档字串

缩进
	统一缩进4个字串

标识符的名称
	见名知意








#ppt----------------------------------------------------------

数据结构：
	通过某种方式（例如对元素进行编号）组织在一起的数据元素的组合，
		这些元素可以是数字或者字符，甚至可以是其他的数据结构
	Python的最基本数据结构是序列
	序列中每一个元素被分配一个序号--即元素的位置，也被称为索引；索引从0开始编号
	Python包含6种内建的数据序列：列表、元组、字符串、Unicode字符串、buffer对象和xrange对象

Python的关键要素
基本数据类型
对象引用
组合数据类型
逻辑操作符
控制流语句
算术操作符
输入/输出
函数的创建与调用

----------------------------------------------
要素#1 基本数据类型

任何程序语言都必须能够表示基本数据像

python中的基本数据类型有

	Integral 类型
		整型：不可变类型
			-257，,21612312321421412
		布尔型
			True，False
	浮点类型
		浮点数
			3.141592
		复数
			3+6j
		十进制数字
	字符串
		'GNU is Not Unux',"hello",'"dog"'


##
字串是不可变对象

id(num) # 变量num
python所有字串都要有引号 不分单双
type(num)判断字符类型
dir
len()


-------------------------------
要素#2 对象引用

变量命名规则
	只能包含字母、数字和下划线，且不能以数字开头
	区分字母大小写
	禁止使用保留字
		python2与python3保留字有所不同

命令惯例
	以单一下划线开头变量名(_x)不能被from module import *语句导入
	前后有双下划线的变量名(__x__) 是系统定义的变量名，对python解释器有特殊意义
	以两个下划线开头但结尾没有下划线的变量民(__x)是类本地变量
	在交互模式下，变量名"_"用于保存最后表达式的结果

# 变量名没有类型 对象才有




-------------------------------
要素#3 组合数据类型


数据结构：通过某种方式（例如对元素进行编号）组织在一起的数据元素的组合

Python常用的组合数据类型
	序列类型
		列表：使用[]创建，如['call','me','maybe','.']
		元组：使用()创建，如（'one','two'）
		字符串也属于序列类型
	集合类型
		集合类型
	映射类型
		字典


字典是可变序列，元组是不可变序列

Python中，组合数据类型也是对象，因此可以嵌套
	['hello','dog',[1,2,3]]

实质上列表和元组并不真正存储数据，而是存放对象引用

Python对象可以具有其可以被调用的特定“方法（函数）”

元组、列表以及字符串等数据类型是“有大小的”，也即，其长度可以使用内置函数len()测量

##
列表是可变对象 可以本地修改


---------------------------------
要素#4 逻辑操作符

python 提供了4组逻辑运算
	身份操作符
		is：判定左端对象是否相同于右端对象；也可以与None进行
	比较操作符
		<,>.<=,>=,!=,==
	成员操作符
		in 或not in :测试成员关系
	逻辑运算符
		and,or,not
---------------------------------
要素#5 控制流语句
控制流语句是过程式编程语言的基本控制机制

Python的常见控制流语句
	if
	while
	for...in
	try

----------------------------------\
要素#6 算术操作符

Python提供了完整的算术操作符

很多的Python数据类型也可以使用增强的赋值操作符，如+=、-=等；

同样的功能，使用增强型赋值操作符的性能较好；

Python的init类型是不可变的，因此，增强型赋值的实际过程是创建了一个新的对象
	来存储结果后将变量名执行了重新绑定

------------------------------------
要素#7 输入/输出

现实中，具有实际功能的程序必须能够读取输入（如从键盘或文件中）
	以产生输出，并写到终端或文件中

Python的输入/输出
	输出
		Python3：print() 函数
		Python2：print 语句导入
	输入
		input()
		raw_input()





Python 释器提供了3种标准文件对象，分别为标准输入、标准输出和标准错误，
	它们在sys模块中分别以 sys.stdin 、sys.stdout、sys.stderr 形式提供

Python的print语句实现打印--一个对程序员友好的标准输出流接口

从技术角度来print，。在 p 尹 hon 中，打印与文件和流的概念联系紧密，文件写入方法是把字符申写入到任意文件习 p 川时默认把对象打印到舒 d 以广流，并添加了一些自动的格式化厂， Z 乙夕了沁八戈乞泞夕亿冷乞次乙力守甲今尸。实质上，少 int 语句只 hon 的人性化特性的具体实现，它提供 Ts 丫， . stdo 价． wri 全．单接 n ，再加一上些默认的格式设置。 p 州 nt 接受一个逗号分隔的对象列表，并为行尾自动那加一个换行符，如果不需要，则在最后个元素后添加逗号多抽趁荃簇签发簇 g 冬，，勺多毖洛名绍弓皿沈提受篮硬签簇已吕


格式化输出

print "String %format1 %format2.." % (variable1,variable2,...)




------------------------------------------

















##
a = raw_input("plz input a name:")
函数的返回值将赋值给变量a
